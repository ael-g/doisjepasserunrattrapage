{"version":3,"sources":["YearCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["YearCalculator","props","state","year","rattrapage","fetch","process","then","res","json","result","itemProcessed","computeBloc","setState","computeRattrapage","unit","grade","credit","creditDisp","name","type","isFondamentale","item","ret","this","push","isNaN","Math","round","event","path","value","target","changeValueInBloc","bloc","processedItem","Object","assign","items","parseFloat","color","computeMeanUeFondamentales","computeECUnderGrade","ecList","sem","ue","ec","yearGrade","meanUeFondamentales","Typography","variant","style","styleValidated","Divider","length","map","semestre","List","ListItem","TextField","disabled","onChange","e","onChangeGrade","defaultValue","width","React","Component","App","basename","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1da295a.chunk.js","sourcesContent":["import React from 'react';\nimport {TextField, Typography, List, ListItem, Divider} from '@material-ui/core/';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nclass YearCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: {'items': []},\n      rattrapage: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.PUBLIC_URL}/diploma/nanterre-l1-histoiredelart-ead.json`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const {itemProcessed} = this.computeBloc(result)\n            this.setState({\n              year: itemProcessed\n            });\n            this.computeRattrapage(itemProcessed)\n        })\n  }\n\n  computeBloc(unit){\n    let grade = 0\n    let credit = 0\n    let creditDisp = 0\n    let itemProcessed = {\n      'name': unit.name,\n      'type': unit.type,\n      'isFondamentale': unit.isFondamentale,\n      'items': []\n    }\n\n    for(const item of unit['items']) {\n      if('items' in item) {\n        // Node\n        const ret = this.computeBloc(item)\n        itemProcessed['items'].push(ret['itemProcessed'])\n\n        if(! isNaN(ret.grade)) {\n          grade += ret.grade * ret.credit\n          credit += ret.credit\n        } else {\n          creditDisp += ret.credit\n        }\n      } else {\n        // Leaf\n        itemProcessed['items'].push(item)\n\n        if(item['disp']) {\n          creditDisp += item['credit']\n        } else {\n          grade += item['value'] * item['credit']\n          credit += item['credit']\n        }\n      }\n    }\n\n    grade = Math.round((grade / credit) * 1000) / 1000\n    credit += creditDisp\n      \n    itemProcessed['grade'] = grade\n    itemProcessed['credit'] = credit\n\n    return {itemProcessed, grade, credit}\n  }\n\n  onChangeGrade(event, path) {\n    const value = event.target.value\n    let year = this.changeValueInBloc(this.state.year, path, value)\n    year = this.computeBloc(year)\n    year = year.itemProcessed\n    this.computeRattrapage(year)\n\n    this.setState({\n      year\n    })\n  }\n\n  changeValueInBloc(bloc, path, value) {\n    const processedItem = Object.assign({}, bloc)\n    if('items' in processedItem) {\n      let items = []\n      \n      for(let item of bloc['items']) {\n        const ret = this.changeValueInBloc(item, path, value)\n        items.push(ret)\n      }\n\n      processedItem['items'] = items\n    } else {\n      if(processedItem['name'] === path) {\n        processedItem['value'] = parseFloat(value)\n      }\n    }\n\n    return processedItem\n  }\n\n  styleValidated(grade) {\n    if(grade >= 10) {\n      return {color: 'green'}\n    }else{\n      return {color: 'red'}\n    }\n  }\n\n  computeRattrapage(year){\n    let rattrapage = []\n    if (year.grade >= 0 && this.computeMeanUeFondamentales(year) >= 10){\n      // Year validated!\n      // nothing to do\n    } else {\n      // Year raté :/\n      // Computing EC to resit\n      rattrapage = this.computeECUnderGrade(year, 10)\n    }\n\n    this.setState({\n      rattrapage\n    })\n  }\n\n  computeECUnderGrade(year, grade) {\n    let ecList = []\n\n    for(const sem of year['items']) {\n      for(const ue of sem['items']) {\n        for(const ec of ue['items']) {\n          if(!ec['disp']) {\n            if (ec['value'] < grade) {\n              ecList.push(ec['name'])\n            }\n          }\n        }\n      }\n    }\n    return ecList   \n  }\n\n  computeMeanUeFondamentales(year) {\n    let grade = 0\n    let credit = 0\n\n    for(const sem of year['items']) {\n      for(const ue of sem['items']) {\n        if(ue['isFondamentale']) {\n          grade += ue['grade'] * ue['credit']\n          credit += ue['credit']\n        }\n      }\n    }\n    return grade / credit\n  }\n  \n  render() {\n    const {year, rattrapage} = this.state\n\n    const yearGrade = year['grade']\n    const meanUeFondamentales = this.computeMeanUeFondamentales(year)\n\n    return (\n      <div>\n        <Typography variant=\"h3\" style={this.styleValidated(year['grade'])}>{year['name']} - {year['credit']} crédits - {year['grade']}</Typography>\n        <Divider  style={{\"marginTop\": \"30px\"}}/>\n        <Typography>Moyenne sur l'année {yearGrade} <span>{yearGrade >= 10? <CheckIcon/>:<ClearIcon/>}</span></Typography>\n        <Typography>Moyenne sur des UE fondamentales {meanUeFondamentales}<span>{meanUeFondamentales >= 10? <CheckIcon/>: <ClearIcon/>}</span></Typography>\n        <Typography>Mes rattrapages:</Typography>\n\n        {rattrapage.length ? (\n            rattrapage.map((ec) => <Typography> - {ec}</Typography>)\n          ):(\n            <Typography>Rien ! Vous avez validé votre année :)</Typography>\n          )\n        }\n        <Divider />\n        {year['items'].map((semestre) => \n        <div key={semestre['name']} style={{\"paddingTop\": \"30px\"}}>\n          <Typography style={this.styleValidated(semestre['grade'])} variant=\"h4\">{semestre['name']} {semestre['grade'] ? semestre['grade']:''}</Typography>{ \n            semestre['items'].map((ue) => \n            <div key={ue['name']}>\n              <Typography style={this.styleValidated(ue['grade'])} variant=\"h5\">{ue['name']} {ue['grade']? ue['grade']:''}</Typography>\n              <List>\n              {\n                ue['items'].map((ec) =>\n                  <ListItem key={ec['name']}>\n                      <Typography style={this.styleValidated(ec['value'])}>\n                        {ec['name']} - {ec['credit']}\n                        <TextField disabled={ec['disp']} onChange={(e) => this.onChangeGrade(e, ec['name'])} defaultValue={ec['disp'] ? 'disp':ec['value']} variant=\"outlined\" style={{\"marginLeft\": \"50px\", width: \"60px\"}}/>\n                      </Typography>\n                  </ListItem>\n                )\n              }\n              </List>\n            </div>)\n          }\n        </div>\n        )}\n    </div>\n    )\n  }\n}\n\nexport {YearCalculator}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport {YearCalculator} from './YearCalculator'\n\nimport './App.css';\n\nfunction App(props) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <YearCalculator></YearCalculator>\n    </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}